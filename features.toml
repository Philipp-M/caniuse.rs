[unstable]

#[[unstable.features]]

[[versions]]
number = "1.42.0"
channel = "nightly"
gh_milestone_id = 69

[[versions]]
number = "1.41.0"
channel = "beta"
gh_milestone_id = 68

[[versions]]
number = "1.40.0"
blog_post = "https://blog.rust-lang.org/2019/12/19/Rust-1.40.0.html"
gh_milestone_id = 67

[[versions.features]]
title = "constructor functions in `const fn`"
flag = "const_constructor"
kind = "lang"

[[versions.features]]
title = "`#![non_exhaustive]`"
flag = "non_exhaustive"
kind = "lang"

[[versions.features]]
title = "macro invocations in `extern {}` blocks"
flag = "macros_in_extern"
kind = "lang"
stabilization_pr_id = 63931

[[versions.features]]
title = "function-like procedural macros in type position"
slug = "type_proc_macros"
kind = "lang"
stabilization_pr_id = 63931

[[versions.features]]
title = "proc-macros that generate `macro_rules!` macros"
slug = "proc_macro_generated_macro_rules"
kind = "lang"
stabilization_pr_id = 64035

[[versions.features]]
title = "`meta` pattern matcher in `macro_rules!` for modern attribute syntax"
slug = "modern_meta_macro_pattern"
kind = "lang"
impl_pr_id = 63674

[[versions.features]]
title = "`#[cfg(doctest)]`"
flag = "cfg_doctest"
kind = "lang"

[[versions.features]]
title = "float â†” bytes conversion"
flag = "float_to_from_bytes"
kind = "stdlib"
items = [
    "f32::to_ne_bytes", "f32::to_le_bytes", "f32::to_be_bytes",
    "f32::from_ne_bytes", "f32::from_le_bytes", "f32::from_be_bytes",

    "f64::to_ne_bytes", "f64::to_le_bytes", "f64::to_be_bytes",
    "f64::from_ne_bytes", "f64::from_le_bytes", "f64::from_be_bytes",
]

[[versions.features]]
title = "`is_power_of_two` as `const fn`"
slug = "const_is_power_of_two"
kind = "stdlib"
impl_pr_id = 65092
items = [
    "u8::is_power_of_two",
    "u16::is_power_of_two",
    "u32::is_power_of_two",
    "u64::is_power_of_two",
    "u128::is_power_of_two",
    "usize::is_power_of_two",
]

[[versions.features]]
title = "`BTreeMap::get_key_value`"
slug = "btreemap_get_key_value"
kind = "stdlib"

[[versions.features]]
title = "`HashMap::get_key_value`"
slug = "hashmap_get_key_value"
kind = "stdlib"

[[versions.features]]
title = "`Option::as_deref_mut`"
slug = "option_as_deref_mut"
kind = "stdlib"

[[versions.features]]
title = "`Option::as_deref`"
slug = "option_as_deref"
kind = "stdlib"

[[versions.features]]
title = "`Option::flatten`"
slug = "option_flatten"
kind = "stdlib"

[[versions.features]]
title = "`UdpSocket::peer_addr`"
slug = "udpsocker_peer_addr"
kind = "stdlib"

[[versions.features]]
title = "`mem::take`"
slug = "mem_take"
kind = "stdlib"

[[versions.features]]
title = "`slice::repeat`"
slug = "slice_repeat"
kind = "stdlib"

[[versions.features]]
title = "`todo!`"
slug = "todo_macro"
kind = "stdlib"
impl_pr_id = 56348
tracking_issue_id = 59277
stabilization_pr_id = 61879

[[versions]]
number = "1.39.0"
blog_post = "https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html"
gh_milestone_id = 66

[[versions.features]]
title = "async / .await"
flag = "async_await"
kind = "lang"
items = ["async fn", "async move { ... }", ".await"]

[[versions.features]]
title = "conditional compilation of function parameters"
flag = "param_attrs"
slug = "param_cfg_attrs"
kind = "lang"
stabilization_pr_id = 64010
items = ["#[cfg(...)]", "#[cfg_attr(...)]"]

[[versions.features]]
title = "lint control attributes on function parameters"
flag = "param_attrs"
slug = "param_lint_attrs"
kind = "lang"
stabilization_pr_id = 64010
items = ["#[allow(...)]", "#[warn(...)]", "#[deny(...)]", "#[forbid(...)]"]

[[versions.features]]
title = "shared references to bind-by-move patterns in `match` arms' guards"
flag = "bind_by_move_pattern_guards"
kind = "lang"
stabilization_pr_id = 63118

[[versions.features]]
title = "`Vec::new` as `const fn`"
slug = "const_vec_new"
kind = "stdlib"

[[versions.features]]
title = "`String::new` as `const fn`"
slug = "const_string_new"
kind = "stdlib"

[[versions.features]]
title = "`LinkedList::new` as `const fn`"
slug = "const_linkedlist_new"
kind = "stdlib"

[[versions.features]]
title = "`str::len` as `const fn`"
slug = "const_str_len"
kind = "stdlib"

[[versions.features]]
title = "`[T]::len` as `const fn`"
slug = "const_slice_len"
kind = "stdlib"

[[versions.features]]
title = "`str::as_bytes` as `const fn`"
slug = "const_str_as_bytes"
kind = "stdlib"

[[versions.features]]
title = "`Pin::into_inner`"
slug = "pin_into_inner"
kind = "stdlib"

[[versions.features]]
title = "`Instant::checked_duration_since`"
slug = "instant_checked_duration_since"
kind = "stdlib"

[[versions.features]]
title = "`Instant::saturating_duration_since`"
slug = "instant_saturating_duration_since"
kind = "stdlib"

[[versions]]
number = "1.38.0"
blog_post = "https://blog.rust-lang.org/2019/09/26/Rust-1.38.0.html"
gh_milestone_id = 65

[[versions.features]]
title = "`#[global_allocator]` inside submodules"
slug = "global_allocator_in_submodules"
kind = "lang"
impl_pr_id = 62735

[[versions.features]]
title = "`#[deprecated]` on macros"
slug = "deprecated_macros"
kind = "lang"
impl_pr_id = 62042

[[versions.features]]
title = "`Clone` implementation for `ascii::EscapeDefault`"
slug = "ascii_escapedefault_clone"
kind = "stdlib"
impl_pr_id = 63421

[[versions.features]]
title = "`Display` implementation for `ascii::EscapeDefault`"
slug = "ascii_escapedefault_display"
kind = "stdlib"
impl_pr_id = 63421

[[versions.features]]
title = "`Debug` implementation for `std::str::Chars`"
slug = "str_chars_debug"
kind = "stdlib"
impl_pr_id = 63000

[[versions.features]]
title = "`Unpin` implementations for pointers"
slug = "unpin_ptr"
kind = "stdlib"
impl_pr_id = 62583
items = ["impl Unpin for *const T", "impl Unpin for *mut T"]

[[versions.features]]
title = "euclidean division & modulo"
flag = "euclidean_division"
kind = "stdlib"
stabilization_pr_id = 61884

[[versions.features]]
title = "`Clone` implementation for `thread::AccessError`"
slug = "thread_accesserror_clone"
kind = "stdlib"
impl_pr_id = 61491

[[versions.features]]
title = "`Copy` implementation for `thread::AccessError`"
slug = "thread_accesserror_copy"
kind = "stdlib"
impl_pr_id = 61491

[[versions.features]]
title = "`Eq` implementation for `thread::AccessError`"
slug = "thread_accesserror_eq"
kind = "stdlib"
impl_pr_id = 61491

[[versions.features]]
title = "`Error` implementation for `thread::AccessError`"
slug = "thread_accesserror_error"
kind = "stdlib"
impl_pr_id = 61491

[[versions.features]]
title = "`PartialEq` implementation for `thread::AccessError`"
slug = "thread_accesserror_partialeq"
kind = "stdlib"
impl_pr_id = 61491

[[versions.features]]
title = "`DoubleEndedIterator` implementation for `iter::StepBy`"
slug = "iter_step_by_double_ended"
kind = "stdlib"
impl_pr_id = 61457

[[versions.features]]
title = "`DoubleEndedIterator` implementation for `iter::Peekable`"
slug = "iter_peekable_double_ended"
kind = "stdlib"
impl_pr_id = 61457

[[versions.features]]
title = "`DoubleEndedIterator` implementation for `iter::Take`"
slug = "iter_take_double_ended"
kind = "stdlib"
impl_pr_id = 61457

[[versions.features]]
title = "`cast` method on pointers"
slug = "ptr_cast"
kind = "stdlib"
item = ["<*const T>::cast", "<*mut T>::cast"]

[[versions.features]]
title = "`Duration::as_secs_f32`"
slug = "duration_as_secs_f32"
kind = "stdlib"

[[versions.features]]
title = "`Duration::as_secs_f64`"
slug = "duration_as_secs_f64"
kind = "stdlib"

[[versions.features]]
title = "`Duration::div_f32`"
slug = "duration_div_f32"
kind = "stdlib"

[[versions.features]]
title = "`Duration::div_f64`"
slug = "duration_div_f64"
kind = "stdlib"

[[versions.features]]
title = "`Duration::from_secs_f32`"
slug = "duration_from_secs_f32"
kind = "stdlib"

[[versions.features]]
title = "`Duration::from_secs_f64`"
slug = "duration_from_secs_f64"
kind = "stdlib"

[[versions.features]]
title = "`Duration::mul_f32`"
slug = "duration_mul_f32"
kind = "stdlib"

[[versions.features]]
title = "`Duration::mul_f64`"
slug = "duration_mul_f64"
kind = "stdlib"

[[versions.features]]
title = "`any::type_name`"
slug = "any_type_name"
kind = "stdlib"

[[versions]]
number = "1.37.0"
blog_post = "https://blog.rust-lang.org/2019/08/15/Rust-1.37.0.html"
gh_milestone_id = 64

[[versions.features]]
title = "conditional compilation of generic parameters"
slug = "generic_param_cfg_attrs"
kind = "lang"
impl_pr_id = 61547
items = ["#[cfg(...)]", "#[cfg_attr(...)]"]

[[versions.features]]
title = "enum variants through a type alias"
slug = "type_alias_enum_variants"
kind = "lang"
stabilization_pr_id = 61682

[[versions.features]]
title = "`_` as an identifier for constants"
flag = "underscore_const_names"
kind = "lang"

[[versions.features]]
title = "`#[repr(align(X)]` on enums"
flag = "repr_align_enum"
kind = "lang"
stabilization_pr_id = 61229

[[versions.features]]
title = "the `?` Kleene macro operator in the 2015 edition"
slug = "kleene_op_2015"
kind = "lang"
impl_pr_id = 60932

[[versions]]
number = "1.36.0"
blog_post = "https://blog.rust-lang.org/2019/07/04/Rust-1.36.0.html"
gh_milestone_id = 62

[[versions.features]]
title = "the `alloc` crate"
flag = "alloc"
kind = "lang"
stabilization_pr_id = 59675

[[versions.features]]
title = "`hashbrown::HashMap` as the implementation of `HashMap`"
slug = "hashbrown"
kind = "lang"
impl_pr_id = 58623

[[versions.features]]
title = "`Default` implementation for `io::Cursor`"
slug = "io_cursor_default"
kind = "stdlib"
impl_pr_id = 60234

[[versions.features]]
title = "`BorrowMut<str>` implementation for `String`"
slug = "string_borrow_mut_str"
kind = "stdlib"
impl_pr_id = 60404

[[versions.features]]
title = "`From<&String>` implementation for `String`"
slug = "string_from_string_ref"
kind = "stdlib"
impl_pr_id = 59825

[[versions.features]]
title = "`mem::needs_drop` as `const fn`"
flag = "const_needs_drop"
kind = "stdlib"
stabilization_pr_id = 60364

[[versions.features]]
title = "`NonNull::cast` as `const fn`"
slug = "const_nonnull_cast"
kind = "stdlib"
impl_pr_id = 60244

[[versions.features]]
title = "`NonNull::dangling` as `const fn`"
slug = "const_nonnull_dangling"
kind = "stdlib"
impl_pr_id = 60244

[[versions]]
number = "1.35.0"
blog_post = "https://blog.rust-lang.org/2019/05/23/Rust-1.35.0.html"
gh_milestone_id = 61

[[versions.features]]
title = "closure to unsafe function pointer coercions"
slug = "coerce_closure_to_unsafe_fn_ptr"
kind = "lang"
impl_pr_id = 59580

[[versions]]
number = "1.34.0"

[[versions.features]]
title = "`#[deprecated = \"reason\"]` as a shorthand for `#[deprecated(note = \"reason\")]`"
slug = "deprecated_equals_reason"
kind = "lang"

[[versions.features]]
title = "arbitrary token streams in procedural attribute macros"
flag = "unrestricted_attribute_tokens"
kind = "lang"
items = ["#[attr{...}]", "#[attr[...]]", "#[attr(...)]"]

[[versions.features]]
title = "`overflowing_neg` as `const fn`"
slug = "const_overflowing_neg"
kind = "stdlib"
items = [
    "i8::overflowing_neg",
    "i16::overflowing_neg",
    "i32::overflowing_neg",
    "i64::overflowing_neg",
    "i128::overflowing_neg",
    "isize::overflowing_neg",
    "u8::overflowing_neg",
    "u16::overflowing_neg",
    "u32::overflowing_neg",
    "u64::overflowing_neg",
    "u128::overflowing_neg",
    "usize::overflowing_neg",
]

[[versions.features]]
title = "`wrapping_neg` as `const fn`"
slug = "const_wrapping_neg"
kind = "stdlib"
items = [
    "i8::wrapping_neg",
    "i16::wrapping_neg",
    "i32::wrapping_neg",
    "i64::wrapping_neg",
    "i128::wrapping_neg",
    "isize::wrapping_neg",
    "u8::wrapping_neg",
    "u16::wrapping_neg",
    "u32::wrapping_neg",
    "u64::wrapping_neg",
    "u128::wrapping_neg",
    "usize::wrapping_neg",
]

[[versions]]
number = "1.33.0"
blog_post = "https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html"

[[versions.features]]
title = "`cfg(target_vendor)`"
flag = "cfg_target_vendor"
kind = "lang"
impl_pr_id = 28612
tracking_issue_id = 29718
stabilization_pr_id = 57465

[[versions]]
number = "1.32.0"
blog_post = "https://blog.rust-lang.org/2019/01/17/Rust-1.32.0.html"

[[versions.features]]
title = "integer â†” bytes conversion"
flag = "int_to_from_bytes"
kind = "stdlib"
items = [
    "i8::to_ne_bytes", "i8::to_le_bytes", "i8::to_be_bytes",
    "i8::from_ne_bytes", "i8::from_le_bytes", "i8::from_be_bytes",

    "i16::to_ne_bytes", "i16::to_le_bytes", "i16::to_be_bytes",
    "i16::from_ne_bytes", "i16::from_le_bytes", "i16::from_be_bytes",

    "i32::to_ne_bytes", "i32::to_le_bytes", "i32::to_be_bytes",
    "i32::from_ne_bytes", "i32::from_le_bytes", "i32::from_be_bytes",

    "i64::to_ne_bytes", "i64::to_le_bytes", "i64::to_be_bytes",
    "i64::from_ne_bytes", "i64::from_le_bytes", "i64::from_be_bytes",

    "i128::to_ne_bytes", "i128::to_le_bytes", "i128::to_be_bytes",
    "i128::from_ne_bytes", "i128::from_le_bytes", "i128::from_be_bytes",

    "isize::to_ne_bytes", "isize::to_le_bytes", "isize::to_be_bytes",
    "isize::from_ne_bytes", "isize::from_le_bytes", "isize::from_be_bytes",

    "u8::to_ne_bytes", "u8::to_le_bytes", "u8::to_be_bytes",
    "u8::from_ne_bytes", "u8::from_le_bytes", "u8::from_be_bytes",

    "u16::to_ne_bytes", "u16::to_le_bytes", "u16::to_be_bytes",
    "u16::from_ne_bytes", "u16::from_le_bytes", "u16::from_be_bytes",

    "u32::to_ne_bytes", "u32::to_le_bytes", "u32::to_be_bytes",
    "u32::from_ne_bytes", "u32::from_le_bytes", "u32::from_be_bytes",

    "u64::to_ne_bytes", "u64::to_le_bytes", "u64::to_be_bytes",
    "u64::from_ne_bytes", "u64::from_le_bytes", "u64::from_be_bytes",

    "u128::to_ne_bytes", "u128::to_le_bytes", "u128::to_be_bytes",
    "u128::from_ne_bytes", "u128::from_le_bytes", "u128::from_be_bytes",

    "usize::to_ne_bytes", "usize::to_le_bytes", "usize::to_be_bytes",
    "usize::from_ne_bytes", "usize::from_le_bytes", "usize::from_be_bytes",
]

[[version]]
number = "1.31.0"
blog_post = "https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html"

[[versions]]
number = "1.30.0"
blog_post = "https://blog.rust-lang.org/2018/10/25/Rust-1.30.0.html"

[[versions]]
number = "1.29.0"
blog_post = "https://blog.rust-lang.org/2018/09/13/Rust-1.29.html"

[[versions]]
number = "1.28.0"
blog_post = "https://blog.rust-lang.org/2018/08/02/Rust-1.28.html"

[[versions]]
number = "1.27.0"
blog_post = "https://blog.rust-lang.org/2018/06/21/Rust-1.27.html"

[[versions]]
number = "1.26.0"
blog_post = "https://blog.rust-lang.org/2018/05/10/Rust-1.26.html"

[[versions.features]]
title = "placeholder lifetimes (`'_`)"
flag = "underscore_lifetimes"
kind = "lang"

[[versions.features]]
title = "128 bit integer types"
flag = "i128_type"
kind = "lang"
items = ["i128", "u128"]

[[versions]]
number = "1.25.0"
blog_post = "https://blog.rust-lang.org/2018/03/29/Rust-1.25.html"

[[versions]]
number = "1.24.0"
blog_post = "https://blog.rust-lang.org/2018/02/15/Rust-1.24.html"

[[versions]]
number = "1.23.0"
blog_post = "https://blog.rust-lang.org/2018/01/04/Rust-1.23.html"

[[versions]]
number = "1.22.0"
blog_post = "https://blog.rust-lang.org/2017/11/22/Rust-1.22.html"

[[versions]]
number = "1.21.0"
blog_post = "https://blog.rust-lang.org/2017/10/12/Rust-1.21.html"

[[versions]]
number = "1.20.0"
blog_post = "https://blog.rust-lang.org/2017/08/31/Rust-1.20.html"

[[versions.features]]
title = "the `compile_error!` macro"
flag = "compile_error"
kind = "stdlib"

[[versions]]
number = "1.19.0"
blog_post = "https://blog.rust-lang.org/2017/07/20/Rust-1.19.html"

[[versions]]
number = "1.18.0"
blog_post = "https://blog.rust-lang.org/2017/06/08/Rust-1.18.html"

[[versions]]
number = "1.17.0"
blog_post = "https://blog.rust-lang.org/2017/04/27/Rust-1.17.html"

[[versions]]
number = "1.16.0"
blog_post = "https://blog.rust-lang.org/2017/03/16/Rust-1.16.html"

[[versions]]
number = "1.15.0"
blog_post = "https://blog.rust-lang.org/2017/02/02/Rust-1.15.html"

[[versions]]
number = "1.14.0"
blog_post = "https://blog.rust-lang.org/2016/12/22/Rust-1.14.html"

[[versions]]
number = "1.13.0"
blog_post = "https://blog.rust-lang.org/2016/11/10/Rust-1.13.html"

[[versions]]
number = "1.12.0"
blog_post = "https://blog.rust-lang.org/2016/09/29/Rust-1.12.html"

[[versions]]
number = "1.11.0"
blog_post = "https://blog.rust-lang.org/2016/08/18/Rust-1.11.html"

[[versions]]
number = "1.10.0"
blog_post = "https://blog.rust-lang.org/2016/07/07/Rust-1.10.html"

[[versions]]
number = "1.9.0"
blog_post = "https://blog.rust-lang.org/2016/05/26/Rust-1.9.html"

[[versions]]
number = "1.8.0"
blog_post = "https://blog.rust-lang.org/2016/04/14/Rust-1.8.html"

[[versions]]
number = "1.7.0"
blog_post = "https://blog.rust-lang.org/2016/03/02/Rust-1.7.html"

[[versions]]
number = "1.6.0"
blog_post = "https://blog.rust-lang.org/2016/01/21/Rust-1.6.html"

[[versions.features]]
title = "`#![no_std]`"
flag = "no_std"
kind = "lang"

[[versions]]
number = "1.5.0"
blog_post = "https://blog.rust-lang.org/2015/12/10/Rust-1.5.html"

[[versions]]
number = "1.4.0"
blog_post = "https://blog.rust-lang.org/2015/10/29/Rust-1.4.html"

[[versions]]
number = "1.3.0"
blog_post = "https://blog.rust-lang.org/2015/09/17/Rust-1.3.html"

[[versions]]
number = "1.2.0"
blog_post = "https://blog.rust-lang.org/2015/08/06/Rust-1.2.html"

[[versions]]
number = "1.1.0"
blog_post = "https://blog.rust-lang.org/2015/06/25/Rust-1.1.html"

[[versions]]
number = "1.0.0"
blog_post = "https://blog.rust-lang.org/2015/05/15/Rust-1.0.html"

[[versions.features]]
title = "`if let` expressions"
flag = "if_let"
kind = "lang"

[[versions.features]]
title = "`while let` expressions"
flag = "while_let"
kind = "lang"
