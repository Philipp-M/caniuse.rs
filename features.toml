[[versions]]
number = "1.43"
channel = "nightly"
gh_milestone_id = 70

[[versions]]
number = "1.42"
channel = "beta"
gh_milestone_id = 69

[[versions.features]]
title = "`#[repr(transparent)]` on single-variant enums"
flag = "transparent_enums"
tracking_issue_id = 60405

[[versions.features]]
title = "subslice patterns (`[a, .., b]` and `[a, xs @ .., b]`)"
flag = "slice_patterns"
tracking_issue_id = 62254

[[versions]]
number = "1.41"
blog_post = "https://blog.rust-lang.org/2020/01/30/Rust-1.41.0.html"
gh_milestone_id = 68

[[versions.features]]
title = "relaxed coherence rules"
flag = "re_rebalance_coherence"
tracking_issue_id = 55437

[[versions]]
number = "1.40"
blog_post = "https://blog.rust-lang.org/2019/12/19/Rust-1.40.0.html"
gh_milestone_id = 67

[[versions.features]]
title = "constructor functions in `const fn`"
flag = "const_constructor"
stabilization_pr_id = 61456

[[versions.features]]
title = "`#![non_exhaustive]`"
flag = "non_exhaustive"
stabilization_pr_id = 44109

[[versions.features]]
title = "macro invocations in `extern {}` blocks"
flag = "macros_in_extern"
tracking_issue_id = 49476
stabilization_pr_id = 63931

[[versions.features]]
title = "function-like procedural macros in type position"
slug = "type_proc_macros"
stabilization_pr_id = 63931

[[versions.features]]
title = "proc-macros that generate `macro_rules!` macros"
slug = "proc_macro_generated_macro_rules"
stabilization_pr_id = 64035

[[versions.features]]
title = "the `meta` fragment specifier in `macro_rules!` for modern attribute syntax"
slug = "modern_meta_macro_pattern"
impl_pr_id = 63674

[[versions.features]]
title = "`#[cfg(doctest)]`"
flag = "cfg_doctest"
tracking_issue_id = 62210

[[versions.features]]
title = "float â†” bytes conversion"
flag = "float_to_from_bytes"
items = [
    "f32::to_ne_bytes", "f32::to_le_bytes", "f32::to_be_bytes",
    "f32::from_ne_bytes", "f32::from_le_bytes", "f32::from_be_bytes",

    "f64::to_ne_bytes", "f64::to_le_bytes", "f64::to_be_bytes",
    "f64::from_ne_bytes", "f64::from_le_bytes", "f64::from_be_bytes",
]

[[versions.features]]
title = "`is_power_of_two` as `const fn`"
slug = "const_is_power_of_two"
impl_pr_id = 65092
items = [
    "u8::is_power_of_two",
    "u16::is_power_of_two",
    "u32::is_power_of_two",
    "u64::is_power_of_two",
    "u128::is_power_of_two",
    "usize::is_power_of_two",
]

[[versions.features]]
title = "`BTreeMap::get_key_value`"
slug = "btreemap_get_key_value"

[[versions.features]]
title = "`HashMap::get_key_value`"
slug = "hashmap_get_key_value"

[[versions.features]]
title = "`Option::as_deref_mut`"
slug = "option_as_deref_mut"

[[versions.features]]
title = "`Option::as_deref`"
slug = "option_as_deref"

[[versions.features]]
title = "`Option::flatten`"
slug = "option_flatten"

[[versions.features]]
title = "`UdpSocket::peer_addr`"
slug = "udpsocker_peer_addr"

[[versions.features]]
title = "`mem::take`"
slug = "mem_take"

[[versions.features]]
title = "`slice::repeat`"
slug = "slice_repeat"

[[versions.features]]
title = "`todo!`"
slug = "todo_macro"
impl_pr_id = 56348
tracking_issue_id = 59277
stabilization_pr_id = 61879

[[versions]]
number = "1.39"
blog_post = "https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html"
gh_milestone_id = 66

[[versions.features]]
title = "async / .await"
flag = "async_await"
tracking_issue_id = 50547
items = ["async fn", "async move { ... }", ".await"]

[[versions.features]]
title = "attributes on function parameters"
flag = "param_attrs"
tracking_issue_id = 60406
stabilization_pr_id = 64010
items = [
    "#[cfg(...)]",
    "#[cfg_attr(...)]",
    "#[allow(...)]",
    "#[warn(...)]",
    "#[deny(...)]",
    "#[forbid(...)]",
]

[[versions.features]]
title = "shared references to bind-by-move patterns in `match` arms' guards"
flag = "bind_by_move_pattern_guards"
tracking_issue_id = 15287
stabilization_pr_id = 63118

[[versions.features]]
title = "`Vec::new` as `const fn`"
slug = "const_vec_new"

[[versions.features]]
title = "`String::new` as `const fn`"
slug = "const_string_new"

[[versions.features]]
title = "`LinkedList::new` as `const fn`"
slug = "const_linkedlist_new"

[[versions.features]]
title = "`str::len` as `const fn`"
slug = "const_str_len"

[[versions.features]]
title = "`[T]::len` as `const fn`"
slug = "const_slice_len"

[[versions.features]]
title = "`str::as_bytes` as `const fn`"
slug = "const_str_as_bytes"

[[versions.features]]
title = "`Pin::into_inner`"
slug = "pin_into_inner"

[[versions.features]]
title = "`Instant::checked_duration_since`"
slug = "instant_checked_duration_since"

[[versions.features]]
title = "`Instant::saturating_duration_since`"
slug = "instant_saturating_duration_since"

[[versions]]
number = "1.38"
blog_post = "https://blog.rust-lang.org/2019/09/26/Rust-1.38.0.html"
gh_milestone_id = 65

[[versions.features]]
title = "`#[global_allocator]` inside submodules"
slug = "global_allocator_in_submodules"
impl_pr_id = 62735

[[versions.features]]
title = "`#[deprecated]` on macros"
slug = "deprecated_macros"
impl_pr_id = 62042

[[versions.features]]
title = "`Clone` implementation for `ascii::EscapeDefault`"
slug = "ascii_escapedefault_clone"
impl_pr_id = 63421

[[versions.features]]
title = "`Display` implementation for `ascii::EscapeDefault`"
slug = "ascii_escapedefault_display"
impl_pr_id = 63421

[[versions.features]]
title = "`Debug` implementation for `std::str::Chars`"
slug = "str_chars_debug"
impl_pr_id = 63000

[[versions.features]]
title = "`Unpin` implementations for pointers"
slug = "unpin_ptr"
impl_pr_id = 62583
items = ["impl Unpin for *const T", "impl Unpin for *mut T"]

[[versions.features]]
title = "euclidean division & modulo"
flag = "euclidean_division"
stabilization_pr_id = 61884

[[versions.features]]
title = "`Clone` implementation for `thread::AccessError`"
slug = "thread_accesserror_clone"
impl_pr_id = 61491

[[versions.features]]
title = "`Copy` implementation for `thread::AccessError`"
slug = "thread_accesserror_copy"
impl_pr_id = 61491

[[versions.features]]
title = "`Eq` implementation for `thread::AccessError`"
slug = "thread_accesserror_eq"
impl_pr_id = 61491

[[versions.features]]
title = "`Error` implementation for `thread::AccessError`"
slug = "thread_accesserror_error"
impl_pr_id = 61491

[[versions.features]]
title = "`PartialEq` implementation for `thread::AccessError`"
slug = "thread_accesserror_partialeq"
impl_pr_id = 61491

[[versions.features]]
title = "`DoubleEndedIterator` implementation for `iter::StepBy`"
slug = "iter_step_by_double_ended"
impl_pr_id = 61457

[[versions.features]]
title = "`DoubleEndedIterator` implementation for `iter::Peekable`"
slug = "iter_peekable_double_ended"
impl_pr_id = 61457

[[versions.features]]
title = "`DoubleEndedIterator` implementation for `iter::Take`"
slug = "iter_take_double_ended"
impl_pr_id = 61457

[[versions.features]]
title = "`cast` method on pointers"
slug = "ptr_cast"
item = ["<*const T>::cast", "<*mut T>::cast"]

[[versions.features]]
title = "`Duration::as_secs_f32`"
slug = "duration_as_secs_f32"

[[versions.features]]
title = "`Duration::as_secs_f64`"
slug = "duration_as_secs_f64"

[[versions.features]]
title = "`Duration::div_f32`"
slug = "duration_div_f32"

[[versions.features]]
title = "`Duration::div_f64`"
slug = "duration_div_f64"

[[versions.features]]
title = "`Duration::from_secs_f32`"
slug = "duration_from_secs_f32"

[[versions.features]]
title = "`Duration::from_secs_f64`"
slug = "duration_from_secs_f64"

[[versions.features]]
title = "`Duration::mul_f32`"
slug = "duration_mul_f32"

[[versions.features]]
title = "`Duration::mul_f64`"
slug = "duration_mul_f64"

[[versions.features]]
title = "`any::type_name`"
slug = "any_type_name"

[[versions]]
number = "1.37"
blog_post = "https://blog.rust-lang.org/2019/08/15/Rust-1.37.0.html"
gh_milestone_id = 64

[[versions.features]]
title = "conditional compilation of generic parameters"
slug = "generic_param_cfg_attrs"
impl_pr_id = 61547
items = ["#[cfg(...)]", "#[cfg_attr(...)]"]

[[versions.features]]
title = "enum variants through a type alias"
slug = "type_alias_enum_variants"
tracking_issue_id = 49683
stabilization_pr_id = 61682

[[versions.features]]
title = "`_` as an identifier for constants"
flag = "underscore_const_names"
tracking_issue_id = 54912

[[versions.features]]
title = "`#[repr(align(N)]` on enums"
flag = "repr_align_enum"
tracking_issue_id = 57996
stabilization_pr_id = 61229
edition_guide_path = "rust-2018/data-types/choosing-alignment-with-the-repr-attribute.html"

[[versions.features]]
title = "the `?` Kleene macro operator in the 2015 edition"
slug = "kleene_op_2015"
impl_pr_id = 60932
edition_guide_path = "rust-2018/macros/at-most-once.html"

[[versions]]
number = "1.36"
blog_post = "https://blog.rust-lang.org/2019/07/04/Rust-1.36.0.html"
gh_milestone_id = 62

[[versions.features]]
title = "the `alloc` crate"
flag = "alloc"
stabilization_pr_id = 59675

[[versions.features]]
title = "Non-Lexical Lifetimes (NLL) on the 2015 edition"
slug = "nll_2015"
impl_pr_id = 59114

[[versions.features]]
title = "`hashbrown::HashMap` as the implementation of `HashMap`"
slug = "hashbrown"
impl_pr_id = 58623

[[versions.features]]
title = "multiple arguments in `dbg!` macro invocations"
slug = "dbg_multiple_args"
impl_pr_id = 59826

[[versions.features]]
title = "`Default` implementation for `io::Cursor`"
slug = "io_cursor_default"
impl_pr_id = 60234

[[versions.features]]
title = "`BorrowMut<str>` implementation for `String`"
slug = "string_borrow_mut_str"
impl_pr_id = 60404

[[versions.features]]
title = "`From<&String>` implementation for `String`"
slug = "string_from_string_ref"
impl_pr_id = 59825

[[versions.features]]
title = "`mem::needs_drop` as `const fn`"
flag = "const_needs_drop"
stabilization_pr_id = 60364

[[versions.features]]
title = "`NonNull::cast` as `const fn`"
slug = "const_nonnull_cast"
impl_pr_id = 60244

[[versions.features]]
title = "`NonNull::dangling` as `const fn`"
slug = "const_nonnull_dangling"
impl_pr_id = 60244

[[versions]]
number = "1.35"
blog_post = "https://blog.rust-lang.org/2019/05/23/Rust-1.35.0.html"
gh_milestone_id = 61

[[versions.features]]
title = "closure to unsafe function pointer coercions"
slug = "coerce_closure_to_unsafe_fn_ptr"
impl_pr_id = 59580

[[versions.features]]
title = "boxed closure `Fn*` trait implementations"
flag = "boxed_closure_impls"
impl_pr_id = 59500
items = [
    "impl<A, F> FnOnce for Box<F> where F: FnOnce<A> + ?Sized",
    "impl<A, F> FnMut for Box<F> where F: FnMut<A> + ?Sized",
    "impl<A, F> Fn for Box<F> where F: Fn<A> + ?Sized",
]

[[versions.features]]
title = "`dbg!` without arguments"
slug = "dbg_no_args"
impl_pr_id = 57847

[[versions]]
number = "1.34"
blog_post = "https://blog.rust-lang.org/2019/04/11/Rust-1.34.0.html"
gh_milestone_id = 60

[[versions.features]]
title = "`#[deprecated = \"reason\"]` as a shorthand for `#[deprecated(note = \"reason\")]`"
slug = "deprecated_equals_reason"

[[versions.features]]
title = "`extern crate self as foo;`"
flag = "extern_crate_self"
tracking_issue_id = 56409
stabilization_pr_id = 57407

[[versions.features]]
title = "arbitrary token streams in procedural attribute macros"
flag = "unrestricted_attribute_tokens"
tracking_issue_id = 55208
items = ["#[attr{...}]", "#[attr[...]]", "#[attr(...)]"]

[[versions.features]]
title = "`overflowing_neg` as `const fn`"
slug = "const_overflowing_neg"
items = [
    "i8::overflowing_neg",
    "i16::overflowing_neg",
    "i32::overflowing_neg",
    "i64::overflowing_neg",
    "i128::overflowing_neg",
    "isize::overflowing_neg",
    "u8::overflowing_neg",
    "u16::overflowing_neg",
    "u32::overflowing_neg",
    "u64::overflowing_neg",
    "u128::overflowing_neg",
    "usize::overflowing_neg",
]

[[versions.features]]
title = "`wrapping_neg` as `const fn`"
slug = "const_wrapping_neg"
items = [
    "i8::wrapping_neg",
    "i16::wrapping_neg",
    "i32::wrapping_neg",
    "i64::wrapping_neg",
    "i128::wrapping_neg",
    "isize::wrapping_neg",
    "u8::wrapping_neg",
    "u16::wrapping_neg",
    "u32::wrapping_neg",
    "u64::wrapping_neg",
    "u128::wrapping_neg",
    "usize::wrapping_neg",
]

[[versions.features]]
title = "alternative registries to crates.io in cargo"
slug = "alternative_registries"

[[versions]]
number = "1.33"
blog_post = "https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html"
gh_milestone_id = 59

[[versions.features]]
title = "integer match exhaustiveness checking"
flag = "exhaustive_integer_patterns"
rfc_id = 2591
tracking_issue_id = 50907

[[versions.features]]
title = "`use path as _;` and `extern crate c as _;`"
flag = "underscore_imports"
tracking_issue_id = 48216

[[versions.features]]
title = "`#[repr(packed(N))]` on structs"
flag = "repr_packed"
rfc_id = 1399
tracking_issue_id = 33158
stabilization_pr_id = 57049

[[versions.features]]
title = "irrefutable patterns in `if let` and `while let`"
flag = "irrefutable_let_patterns"
rfc_id = 2086
impl_pr_id = 49469
tracking_issue_id = 44495
stabilization_pr_id = 57535

[[versions.features]]
title = "`const unsafe fn`s inside `unsafe` blocks in `const fn`"
flag = "min_const_unsafe_fn"
tracking_issue_id = 55607
stabilization_pr_id = 57067

[[versions.features]]
title = "let bindings, assignments and destructuring in `const fn`"
flag = "const_let"
rfc_id = 2341
tracking_issue_id = 48821
stabilization_pr_id = 57175

[[versions.features]]
title = "`#[cfg_attr(cfg, attr1, attr2, attr3)]`"
flag = "cfg_attr_multi"
rfc_id = 2539
impl_pr_id = 54862
tracking_issue_id = 54881
stabilization_pr_id = 57332

[[versions.features]]
title = "or-patterns in `if let` and `while let`"
flag = "if_while_or_patterns"
rfc_id = 2175
tracking_issue_id = 48215
stabilization_pr_id = 57532

[[versions.features]]
title = "`cfg(target_vendor)`"
flag = "cfg_target_vendor"
impl_pr_id = 28612
tracking_issue_id = 29718
stabilization_pr_id = 57465

[[versions]]
number = "1.32"
blog_post = "https://blog.rust-lang.org/2019/01/17/Rust-1.32.0.html"
gh_milestone_id = 63

[[versions.features]]
title = "the `literal` fragment specifier in `macro_rules!`"
flag = "macro_literal_matcher"
tracking_issue_id = 35625

[[versions.features]]
title = "`?` as the Kleene \"at most one\" operator in `macro_rules!` in the 2018 edition"
flag = "macro_at_most_once_rep"
tracking_issue_id = 48075
edition_guide_path = "rust-2018/macros/at-most-once.html"

#[[versions.features]]
#flag = "self_struct_ctor"
#rfc_id = 2302
#tracking_issue_id = 51994

[[versions.features]]
title = "`Self` in type definitions"
flag = "self_in_typedefs"
rfc_id = 2300
tracking_issue_id = 49303

[[versions.features]]
title = "uniform paths (`use x::y;` as `use self::x::y;`)"
flag = "uniform_paths"
tracking_issue_id = 53130

[[versions.features]]
title = "`dbg!`"
flag = "dbg_macro"
rfc_id = 2361
impl_pr_id = 54317
tracking_issue_id = 54306
stabilization_pr_id = 56395

[[versions.features]]
title = "integer â†” bytes conversion"
flag = "int_to_from_bytes"
items = [
    "i8::to_ne_bytes", "i8::to_le_bytes", "i8::to_be_bytes",
    "i8::from_ne_bytes", "i8::from_le_bytes", "i8::from_be_bytes",

    "i16::to_ne_bytes", "i16::to_le_bytes", "i16::to_be_bytes",
    "i16::from_ne_bytes", "i16::from_le_bytes", "i16::from_be_bytes",

    "i32::to_ne_bytes", "i32::to_le_bytes", "i32::to_be_bytes",
    "i32::from_ne_bytes", "i32::from_le_bytes", "i32::from_be_bytes",

    "i64::to_ne_bytes", "i64::to_le_bytes", "i64::to_be_bytes",
    "i64::from_ne_bytes", "i64::from_le_bytes", "i64::from_be_bytes",

    "i128::to_ne_bytes", "i128::to_le_bytes", "i128::to_be_bytes",
    "i128::from_ne_bytes", "i128::from_le_bytes", "i128::from_be_bytes",

    "isize::to_ne_bytes", "isize::to_le_bytes", "isize::to_be_bytes",
    "isize::from_ne_bytes", "isize::from_le_bytes", "isize::from_be_bytes",

    "u8::to_ne_bytes", "u8::to_le_bytes", "u8::to_be_bytes",
    "u8::from_ne_bytes", "u8::from_le_bytes", "u8::from_be_bytes",

    "u16::to_ne_bytes", "u16::to_le_bytes", "u16::to_be_bytes",
    "u16::from_ne_bytes", "u16::from_le_bytes", "u16::from_be_bytes",

    "u32::to_ne_bytes", "u32::to_le_bytes", "u32::to_be_bytes",
    "u32::from_ne_bytes", "u32::from_le_bytes", "u32::from_be_bytes",

    "u64::to_ne_bytes", "u64::to_le_bytes", "u64::to_be_bytes",
    "u64::from_ne_bytes", "u64::from_le_bytes", "u64::from_be_bytes",

    "u128::to_ne_bytes", "u128::to_le_bytes", "u128::to_be_bytes",
    "u128::from_ne_bytes", "u128::from_le_bytes", "u128::from_be_bytes",

    "usize::to_ne_bytes", "usize::to_le_bytes", "usize::to_be_bytes",
    "usize::from_ne_bytes", "usize::from_le_bytes", "usize::from_be_bytes",
]

[[versions]]
number = "1.31"
blog_post = "https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html"
gh_milestone_id = 58

[[versions.features]]
title = "parentheses in patterns"
flag = "pattern_parentheses"
tracking_issue_id = 51087

[[versions.features]]
title = "`const fn`"
flag = "min_const_fn"
tracking_issue_id = 53555

[[versions.features]]
title = "scoped lints"
flag = "tool_lints"
tracking_issue_id = 44690

[[versions.features]]
title = "lifetime elision in `impl` headers"
flag = "impl_header_lifetime_elision"
tracking_issue_id = 158872
edition_guide_path = "rust-2018/ownership-and-lifetimes/lifetime-elision-in-impl.html"

[[versions.features]]
title = "`extern crate foo as bar;`"
flag = "extern_crate_item_prelude"
tracking_issue_id = 55599

[[versions]]
number = "1.30"
blog_post = "https://blog.rust-lang.org/2018/10/25/Rust-1.30.0.html"
gh_milestone_id = 57

[[versions.features]]
title = "`foo.rs` as an alternative to `foo/mod.rs`"
flag = "non_modrs_mods"
tracking_issue_id = 44660

[[versions.features]]
title = "the `vis` fragment specifier in `macro_rules!`"
flag = "macro_vis_matcher"
tracking_issue_id = 41022

[[versions.features]]
title = "macro imports and reexports via the module system"
flag = "use_extern_macro"
tracking_issue_id = 35896

[[versions.features]]
title = "raw identifiers (`r#keyword`)"
flag = "raw_identifiers"
tracking_issue_id = 48589
edition_guide_path = "rust-2018/module-system/raw-identifiers.html"

[[versions.features]]
title = "tool-scoped attributes"
flag = "tool_attributes"
tracking_issue_id = 44690

[[versions.features]]
title = "multi-segment paths in attributes and derives"
flag = "proc_macro_path_invoc"
tracking_issue_id = 38356

[[versions.features]]
title = "non-string literals in attribute lists and values of key-value pairs"
flag = "attr_literals"
tracking_issue_id = 34981

[[versions.features]]
title = "outlives requirement inference"
flag = "infer_outlives_requirements"
rfc_id = 2093
tracking_issue_id = 44493

[[versions.features]]
title = "`#[panic_handler]`"
flag = "panic_handler"
tracking_issue_id = 44489

[[versions.features]]
title = "`#[used]`"
flag = "used"
tracking_issue_id = 40289

[[versions.features]]
title = "`crate` in paths"
flag = "crate_in_paths"
tracking_issue_id = 45477

[[versions.features]]
title = "absolute paths as paths from other crates"
flag = "extern_absolute_paths"
tracking_issue_id = 44660

#[[versions.features]]
#flag = "extern_prelude"
#tracking_issue_id = 44660

[[versions]]
number = "1.29"
blog_post = "https://blog.rust-lang.org/2018/09/13/Rust-1.29.html"
gh_milestone_id = 53

[[versions.features]]
title = "procedural macros"
flag = "proc_macro"
tracking_issue_id = 38356

[[versions]]
number = "1.28"
blog_post = "https://blog.rust-lang.org/2018/08/02/Rust-1.28.html"
gh_milestone_id = 51

[[versions.features]]
title = "`#[global_allocator]`"
flag = "global_allocator"
tracking_issue_id = 27389
edition_guide_path = "rust-2018/platform-and-target-support/global-allocators.html"

[[versions.features]]
title = "`#[repr(transparent)]` on newtype structs"
flag = "repr_transparent"
tracking_issue_id = 43036
stabilization_pr_id = 51562

[[versions.features]]
title = "`pure` as an identifier"
slug = "pure_ident"
rfc_id = 2421
impl_pr_id = 51196

[[versions.features]]
title = "`sizeof` as an identifier"
slug = "sizeof_ident"
rfc_id = 2421
impl_pr_id = 51196

[[versions.features]]
title = "`alignof` as an identifier"
slug = "alignof_ident"
rfc_id = 2421
impl_pr_id = 51196

[[versions.features]]
title = "`offsetof` as an identifier"
slug = "offsetof_ident"
rfc_id = 2421
impl_pr_id = 51196

[[versions]]
number = "1.27"
blog_post = "https://blog.rust-lang.org/2018/06/21/Rust-1.27.html"
gh_milestone_id = 50

[[versions.features]]
title = "attributes on generic parameters"
flag = "generic_param_attrs"
rfc_id = 1327
tracking_issue_id = 48848

[[versions.features]]
title = "`#[cfg(target_feature = \"...\")]`"
flag = "cfg_target_feature"
tracking_issue_id = 29717

[[versions.features]]
title = "`#[target_feature(...)]`"
slug = "target_feature"

[[versions.features]]
title = "`dyn Trait` as a syntax for trait objects"
flag = "dyn_trait"
tracking_issue_id = 44662
edition_guide_path = "rust-2018/trait-system/dyn-trait-for-trait-objects.html"

[[versions.features]]
title = "`#[must_use]` on functions"
flag = "fn_must_use"
rfc_id = 1940
tracking_issue_id = 43302

[[versions.features]]
title = "the `lifetime` fragment specifier in `macro_rules!`"
flag = "macro_lifetime_matcher"
tracking_issue_id = 34303
stabilization_pr_id = 50385

[[versions.features]]
title = "types implementing `Termination` as the return type for `#[test]`s"
flag = "termination_trait_test"
tracking_issue_id = 48854

[[versions.features]]
title = "`proc` as an identifier"
slug = "proc_ident"
impl_pr_id = 49699

[[versions]]
number = "1.26"
blog_post = "https://blog.rust-lang.org/2018/05/10/Rust-1.26.html"
gh_milestone_id = 48

[[versions.features]]
title = "array indexing in constants"
flag = "const_indexing"
tracking_issue_id = 29947
stabilization_pr_id = 46882

[[versions.features]]
title = "inclusive range syntax"
flag = "inclusive_range_syntax"
rfc_id = 1192
tracking_issue_id = 28237
stabilization_pr_id = 47813
edition_guide_path = "rust-2018/data-types/inclusive-ranges.html"
items = ["a..=b", "..=b"]

[[versions.features]]
title = "inclusive ranges in patterns"
flag = "dotdoteq_in_patterns"
rfc_id = 1192
tracking_issue_id = 28237
book_path = "ch18-03-pattern-syntax.html#matching-ranges-of-values-with-"
items = ["a..=b", "..=b"]

[[versions.features]]
title = "types implementing `Termination` as the return type for `fn main()`"
flag = "termination_trait"
tracking_issue_id = 43301
edition_guide_path = "rust-2018/error-handling-and-panics/question-mark-in-main-and-tests.html"

[[versions.features]]
title = "`Clone` implementation for applicable closures"
flag = "clone_closures"
rfc_id = 2132
tracking_issue_id = 44490

[[versions.features]]
title = "`Copy` implementation for applicable closures"
flag = "copy_closures"
rfc_id = 2132
tracking_issue_id = 44490

[[versions.features]]
title = "`impl Trait` in function arguments"
flag = "universal_impl_trait"
tracking_issue_id = 34511
edition_guide_path = "rust-2018/trait-system/impl-trait-for-returning-complex-types-with-ease.html"

[[versions.features]]
title = "`impl Trait` in function return types"
flag = "conservative_impl_trait"
tracking_issue_id = 34511
edition_guide_path = "rust-2018/trait-system/impl-trait-for-returning-complex-types-with-ease.html"

[[versions.features]]
title = "128 bit integer types"
flag = "i128_type"
tracking_issue_id = 35118
edition_guide_path = "rust-2018/data-types/128-bit-integers.html"
items = ["i128", "u128"]

[[versions.features]]
title = "default match binding modes"
flag = "match_default_bindings"
rfc_id = 2005
stabilization_pr_id = 42640
edition_guide_path = "rust-2018/ownership-and-lifetimes/default-match-bindings.html"

[[versions.features]]
title = "placeholder lifetimes (`'_`)"
flag = "underscore_lifetimes"
rfc_id = 2115
tracking_issue_id = 48469
stabilization_pr_id = 49458
edition_guide_path = "rust-2018/ownership-and-lifetimes/the-anonymous-lifetime.html"

[[versions]]
number = "1.25"
blog_post = "https://blog.rust-lang.org/2018/03/29/Rust-1.25.html"
gh_milestone_id = 44

[[versions.features]]
title = "`#[repr(align(N))]`"
flag = "repr_align"
rfc_id = 1358
tracking_issue_id = 33626
stabilization_pr_id = 47006

[[versions.features]]
title = "`|` at the beginning of match arms"
flag = "match_beginning_vert"
rfc_id = 1925
tracking_issue_id = 44101
stabilization_pr_id = 47947

[[versions.features]]
title = "nested groups in imports"
flag = "use_nested_groups"
rfc_id = 2128
tracking_issue_id = 44494
stabilization_pr_id = 47948
edition_guide_path = "rust-2018/module-system/nested-imports-with-use.html"

[[versions]]
number = "1.24"
blog_post = "https://blog.rust-lang.org/2018/02/15/Rust-1.24.html"
gh_milestone_id = 41

[[versions.features]]
title = "the sysV64 ABI on any platform"
flag = "abi_sysv64"
tracking_issue_id = 36167

[[versions.features]]
title = "`is_null` on pointers to unsized types"
slug = "unsized_ptr_is_null"
impl_pr_id = 46094
items = ["<*const T>::is_null", "<*mut T>::is_null"]

[[versions]]
number = "1.23"
blog_post = "https://blog.rust-lang.org/2018/01/04/Rust-1.23.html"
gh_milestone_id = 40

[[versions.features]]
title = "`as_ref` on pointers to unsized types"
slug = "unsized_ptr_as_ref"
impl_pr_id = 44932
items = ["<*const T>::as_ref", "<*mut T>::as_ref"]

[[versions.features]]
title = "`as_mut` on `*mut T`"
slug = "unsized_ptr_as_mut"
impl_pr_id = 44932

[[versions]]
number = "1.22"
blog_post = "https://blog.rust-lang.org/2017/11/22/Rust-1.22.html"
gh_milestone_id = 39

[[versions.features]]
title = "`Drop` types in constants"
flag = "drop_types_in_const"
rfc_id = 1440
tracking_issue_id = 33156

[[versions]]
number = "1.21"
blog_post = "https://blog.rust-lang.org/2017/10/12/Rust-1.21.html"
gh_milestone_id = 38

#[[versions.features]]
#flag = "rvalue_static_promotion"
#rfc_id = 1414
#tracking_issue_id = 38865

[[versions]]
number = "1.20"
blog_post = "https://blog.rust-lang.org/2017/08/31/Rust-1.20.html"
gh_milestone_id = 37

[[versions.features]]
title = "attributes on struct literal fields"
flag = "struct_field_attributes"
tracking_issue_id = 38814

[[versions.features]]
title = "associated constants in `trait` and `impl` blocks"
flag = "associated_consts"
tracking_issue_id = 29646
stabilization_pr_id = 42809
edition_guide_path = "rust-2018/trait-system/associated-constants.html"

[[versions.features]]
title = "`compile_error!`"
flag = "compile_error"
rfc_id = 1695
impl_pr_id = 42620
tracking_issue_id = 40872
stabilization_pr_id = 43373

[[versions.features]]
title = "`unimplemented!` with a message"
slug = "unimplemented_macro_args"
impl_pr_id = 42155

[[versions]]
number = "1.19"
blog_post = "https://blog.rust-lang.org/2017/07/20/Rust-1.19.html"
gh_milestone_id = 36

[[versions.features]]
title = "`union`s"
flag = "untagged_unions"
rfc_id = 1444
tracking_issue_id = 32836
stabilization_pr_id = 42068

[[versions.features]]
title = "`break` with a value inside `loop`s"
flag = "loop_break_value"
rfc_id = 1624
tracking_issue_id = 37339
stabilization_pr_id = 42016
edition_guide_path = "rust-2018/control-flow/loops-can-break-with-a-value.html"

[[versions.features]]
title = "numeric fields in struct expressions and patterns"
flag = "relaxed_adts"
tracking_issue_id = 35626

[[versions.features]]
title = "non-capturing closure to function pointer coercion"
flag = "closure_to_fn_coercion"
rfc_id = 1558
tracking_issue_id = 39817
stabilization_pr_id = 42162

[[versions.features]]
title = "`eprint!`"
slug = "eprint"
impl_pr_id = 41192

[[versions.features]]
title = "`eprintln!`"
slug = "eprintln"
rfc_id = 1869
impl_pr_id = 41192
tracking_issue_id = 40528

[[versions]]
number = "1.18"
blog_post = "https://blog.rust-lang.org/2017/06/08/Rust-1.18.html"
gh_milestone_id = 35

[[versions.features]]
title = "`pub(restricted)` visibilities"
flag = "pub_restricted"
rfc_id = 1422
tracking_issue_id = 32409
stabilization_pr_id = 40556
edition_guide_path = "rust-2018/module-system/more-visibility-modifiers.html"
items = ["pub(crate)", "pub(super)", "pub(in m)"]

[[versions.features]]
title = "`#![windows_subsystem]`"
flag = "windows_subsystem"
tracking_issue_id = 37499

[[versions]]
number = "1.17"
blog_post = "https://blog.rust-lang.org/2017/04/27/Rust-1.17.html"
gh_milestone_id = 34

[[versions.features]]
title = "elision of `'static` lifetimes in `static`s and `const`s"
flag = "static_in_const"
tracking_issue_id = 35897
edition_guide_path = "rust-2018/ownership-and-lifetimes/simpler-lifetimes-in-static-and-const.html"

[[versions.features]]
title = "field init shorthands (`x` for `x: x` in struct initializers)"
flag = "field_init_shorthand"
tracking_issue_id = 37340
edition_guide_path = "rust-2018/data-types/field-init-shorthand.html"

[[versions.features]]
title = "recursive static items"
flag = "static_recursion"
tracking_issue_id = 29719

[[versions]]
number = "1.16"
blog_post = "https://blog.rust-lang.org/2017/03/16/Rust-1.16.html"
gh_milestone_id = 33

[[versions.features]]
title = "`Self` in struct expressions and patterns"
slug = "self_struct_expr_pat"
tracking_issue_id = 37544
stabilization_pr_id = 39282

[[versions.features]]
title = "associated types in struct expressions and patterns"
slug = "assoc_ty_struct_expr_pat"
tracking_issue_id = 37544
stabilization_pr_id = 39282

[[versions.features]]
title = "`writeln!` without arguments"
slug = "writeln_no_args"
impl_pr_id = 38469

#[[versions.features]]
#flag = "more_struct_aliases"
#tracking_issue_id = 37544

#[[versions.features]]
#title = "cargo check"

[[versions]]
number = "1.15"
blog_post = "https://blog.rust-lang.org/2017/02/02/Rust-1.15.html"

#[[versions.features]]
#flag = "item_like_imports"
#rfc_id = 1560
#tracking_issue_id = 35120

[[versions]]
number = "1.14"
blog_post = "https://blog.rust-lang.org/2016/12/22/Rust-1.14.html"

[[versions.features]]
title = "`..` in tuple (struct) patterns"
flag = "dotdot_in_tuple_patterns"
rfc_id = 1492
tracking_issue_id = 33627
stabilization_pr_id = 36843

[[versions.features]]
title = "`fn` pointer to `unsafe fn` pointer coercion"
slug = "fn_ptr_to_unsafe_fn_ptr"
impl_pr_id = 37389

[[versions.features]]
title = "`println!` without arguments"
slug = "println_no_args"
impl_pr_id = 36825

[[versions]]
number = "1.13"
blog_post = "https://blog.rust-lang.org/2016/11/10/Rust-1.13.html"

[[versions.features]]
title = "`macro_rules!` macros in type position"
flag = "type_macros"
tracking_issue_id = 27245

[[versions.features]]
title = "the `?` operator"
flag = "question_mark"
rfc_id = 243
impl_pr_id = 31954
tracking_issue_id = 31436
stabilization_pr_id = 36995
edition_guide_path = "rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html"

[[versions.features]]
title = "`assert_ne!`"
rfc_id = 1653
impl_pr_id = 35074
tracking_issue_id = 35073

[[versions.features]]
title = "`debug_assert_ne!`"
rfc_id = 1653
impl_pr_id = 35074
tracking_issue_id = 35073

[[versions]]
number = "1.12"
blog_post = "https://blog.rust-lang.org/2016/09/29/Rust-1.12.html"

[[versions]]
number = "1.11"
blog_post = "https://blog.rust-lang.org/2016/08/18/Rust-1.11.html"

[[versions]]
number = "1.10"
blog_post = "https://blog.rust-lang.org/2016/07/07/Rust-1.10.html"

[[versions]]
number = "1.9"
blog_post = "https://blog.rust-lang.org/2016/05/26/Rust-1.9.html"

[[versions.features]]
title = "`#[deprecated]`"
flag = "deprecated"
tracking_issue_id = 29935

[[versions]]
number = "1.8"
blog_post = "https://blog.rust-lang.org/2016/04/14/Rust-1.8.html"

[[versions.features]]
title = "assignment operator overloading"
flag = "augmented_assignments"
tracking_issue_id = 28235
edition_guide_path = "rust-2018/data-types/operator-equals-are-now-implementable.html"
items = [
    "ops::AddAssign",
    "ops::BitAndAssign",
    "ops::BitOrAssign",
    "ops::BitXorAssign",
    "ops::DivAssign",
    "ops::MulAssign",
    "ops::RemAssign",
    "ops::ShlAssign",
    "ops::ShrAssign",
]

[[versions.features]]
title = "empty structs and enum variants with braces"
flag = "braced_empty_structs"
rfc_id = 218
tracking_issue_id = 29720

[[versions]]
number = "1.7"
blog_post = "https://blog.rust-lang.org/2016/03/02/Rust-1.7.html"

[[versions]]
number = "1.6"
blog_post = "https://blog.rust-lang.org/2016/01/21/Rust-1.6.html"
gh_milestone_id = 28

[[versions.features]]
title = "`#![no_std]`"
flag = "no_std"

[[versions]]
number = "1.5"
blog_post = "https://blog.rust-lang.org/2015/12/10/Rust-1.5.html"
gh_milestone_id = 27

[[versions]]
number = "1.4"
blog_post = "https://blog.rust-lang.org/2015/10/29/Rust-1.4.html"
gh_milestone_id = 26

[[versions.features]]
title = "item renamings in import groups"
slug = "use_group_renaming"

[[versions]]
number = "1.3"
blog_post = "https://blog.rust-lang.org/2015/09/17/Rust-1.3.html"
#gh_milestone_id = 24

[[versions]]
number = "1.2"
blog_post = "https://blog.rust-lang.org/2015/08/06/Rust-1.2.html"
#gh_milestone_id = 25

[[versions.features]]
title = "`iter::once`"
slug = "iter_once"

[[versions.features]]
title = "`iter::empty`"
slug = "iter_empty"

[[versions]]
number = "1.1"
blog_post = "https://blog.rust-lang.org/2015/06/25/Rust-1.1.html"
#gh_milestone_id = 23

[[versions]]
number = "1.0"
blog_post = "https://blog.rust-lang.org/2015/05/15/Rust-1.0.html"
gh_milestone_id = 20

[[versions.features]]
title = "associated types in traits"
flag = "associated_types"

[[versions.features]]
title = "type parameter defaults"
flag = "default_type_params"

#[[versions.features]]
#flag = "globs"

[[versions.features]]
title = "`macro_rules!`"
flag = "macro_rules"

[[versions.features]]
title = "`&foo[a..b]` as slicing syntax"
flag = "slicing_syntax"

[[versions.features]]
title = "struct variants in enums"
flag = "struct_variant"

[[versions.features]]
title = "tuple indexing"
flag = "tuple_indexing"

[[versions.features]]
title = "`if let` expressions"
flag = "if_let"

[[versions.features]]
title = "`while let` expressions"
flag = "while_let"

[unstable]

[[unstable.features]]
title = "`#[link_args]`"
flag = "link_args"
tracking_issue_id = 29596
unstable_book_path = "language-features/link-args.html"

[[unstable.features]]
title = "non-ASCII identifiers"
flag = "non_ascii_idents"
tracking_issue_id = 55467
unstable_book_path = "language-features/non-ascii-idents.html"

[[unstable.features]]
title = "`#[plugin_registrar]`"
flag = "plugin_registrar"
tracking_issue_id = 29597
unstable_book_path = "language-features/plugin-registrar.html"

[[unstable.features]]
title = "`#![plugin(...)]`"
flag = "plugin"
tracking_issue_id = 29597
unstable_book_path = "language-features/plugin.html"

[[unstable.features]]
title = "`#[thread_local]` on `static`s"
flag = "thread_local"
tracking_issue_id = 29594

[[unstable.features]]
title = "default values for associated types"
flag = "associated_type_defaults"
tracking_issue_id = 29661

[[unstable.features]]
title = "`#![no_core]`"
flag = "no_core"
tracking_issue_id = 29639

[[unstable.features]]
title = "type ascription"
flag = "type_ascription"
tracking_issue_id = 23416

[[unstable.features]]
title = "specialization"
flag = "specialization"
tracking_issue_id = 31844

[[unstable.features]]
title = "`#[naked]` functions"
flag = "naked_functions"
tracking_issue_id = 32408

[[unstable.features]]
title = "`cfg(target_has_atomic = ...)`"
flag = "cfg_target_has_atomic"
tracking_issue_id = 32976

[[unstable.features]]
title = "exclusive range patterns (`a..b`)"
flag = "exclusive_range_pattern"
tracking_issue_id = 37854

[[unstable.features]]
title = "the never type (`!`)"
flag = "never_type"
tracking_issue_id = 35121

[[unstable.features]]
title = "exhaustive pattern matching on types thta contain uninhabited types"
flag = "exhaustive_patterns"
tracking_issue_id = 51085
stabilization_pr_id = 56362

[[unstable.features]]
title = "types with a custom `Drop` implementation in `union`s"
flag = "untagged_unions"
slug = "drop_types_in_union"
tracking_issue_id = 55149

[[unstable.features]]
title = "`#[link(..., cfg(...))]`"
flag = "link_cfg"
tracking_issue_id = 37406
